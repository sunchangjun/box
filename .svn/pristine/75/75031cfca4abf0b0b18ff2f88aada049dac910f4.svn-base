package framework.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.alibaba.fastjson.JSONObject;

import framework.common.CollectionUtils;
import framework.common.jpa.Query;
import framework.common.jpa.Select;
import framework.common.result.Code;
import framework.common.result.Message;
import framework.common.result.Result;
import framework.dao.BoxPortRepository;
import framework.dao.ReplenishmentPlanRepository;
import framework.entity.po.Area;
import framework.entity.po.BoxPort;
import framework.entity.po.ReplenishmentPlan;
import net.sf.json.JSONArray;

@RestController
public class ReplenishmentPlanController {
	@Autowired
	BoxPortRepository boxPortRepository;
	@Autowired
	ReplenishmentPlanRepository replenishmentPlanRepository;
	
	@RequestMapping(value = "/getAllReplenishmentPlan")
	public Result getAllReplenishmentPlan(Long boxPortId,Integer isEnable,Integer pages,Integer rows) {
		//参数验证
		if(null == pages || null == rows) {
			Message message = new Message();
			message.setErrno(Code.GWSCOD0003);
			message.setErrmsg(Code.GWSMSG0003);
			return Result.setData(true, message);
		}
		//查询条件
		Query<ReplenishmentPlan> query=new Query<ReplenishmentPlan>();
		if(null != boxPortId) {
			BoxPort boxPort=	boxPortRepository.findOne(boxPortId);
			query.add(Select.eq("boxPort", boxPort));
		}
		if(null != isEnable) {
			query.add(Select.eq("isEnable", isEnable));
		}
		//查询
		JSONArray js=new JSONArray();
		Page<ReplenishmentPlan> page=null;
		try {
			Pageable pageable=new PageRequest(pages-1, rows);
		 page=replenishmentPlanRepository.findAll(query,pageable);
			if(CollectionUtils.isNotEmpty(page.getContent())) {
				
			}
			
		} catch (Exception e) {
			Message message = new Message();
			message.setErrno(Code.GWSCOD0001);
			message.setErrmsg(Code.GWSMSG0001);
			return Result.setData(false, message);
		}
		System.out.println(JSONObject.toJSONString(replenishmentPlanRepository.findAll(query)));;
		return Result.setData(true, null);
	}

}
