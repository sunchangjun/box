package framework.dao;

import java.util.List;

import org.springframework.data.jpa.repository.Query;

import framework.common.jpa.BaseRepository;
import framework.entity.po.CommodityRoad;

/**
 * 货道
 * 
 * @author Administrator
 *
 */
public interface CommodityRoadRepository extends BaseRepository<CommodityRoad, Long> {

	// List<CommodityRoad> findAllByBox(Box box);

	// @Query("select c from CommodityRoad c where c.boxPortId = ?1")
	// List<CommodityRoad> findCommodityRoadListByBoxPortId(Long box_port_id);
	//
	// @Query("select c from CommodityRoad c where c.boxPortId in (?1)")
	// List<CommodityRoad> getCommodityRoadByPortIdList(List<Long> portIdList);

	// @Query("select c from CommodityRoad c where c.commodityId =?1 and c.boxPortId
	// = ?2 order by c.commodityNum")
	// List<CommodityRoad> findCommodityRoadListByBoxPortIdAndCommodityId(Long
	// commodity_id,Long box_port_id);

	/*
	 * 查询某售货机某样商品总数
	 */
	// @Query("SELECT sum(commodityNum) from CommodityRoad c where c.commodityId =?1
	// and c.boxPortId = ?2 ")
	// Integer findCommodityCountByBoxPortIdAndCommodityId(Long commodity_id,Long
	// box_port_id);

	// @Query("SELECT sum(commodityNum) from CommodityRoad c ")
	// Integer findCommodityCountByBoxPortIdAnd();
	//
	@Query(value = "select `c`.`commodity_road_id` AS `commodity_road_id`,`c`.`commodity_id` AS `commodity_id`,`c`.`box_port_id` AS `box_port_id`,`c`.`commodity_num` AS `commodity_num`,`c`.`code` AS `code`,`c`.`code_img_url` AS `code_img_url`,`c`.`is_enable` AS `is_enable` from ((`t_commodity_road` `c` left join `t_box_port` `b` on((`b`.`box_port_id` = `c`.`box_port_id`))) left join `t_box_new` `a` on((`b`.`box_id` = `a`.`box_id`))) where (`a`.`box_id` = ?1) group by `c`.`commodity_road_id`", nativeQuery = true)
	List<CommodityRoad> findAllByBoxId(Long boxId);

	CommodityRoad findByCodeAndBoxPortId(String _code, Long boxPortId);

	@Query(value = "select `a`.`commodity_road_id` AS `commodity_road_id`,`a`.`box_id` AS `box_id`,`a`.`box_port_id` AS `box_port_id`,`a`.`commodity_id` AS `commodity_id`,`a`.`commodity_num` AS `commodity_num`,`a`.`code` AS `code`,`a`.`code_img_url` AS `code_img_url`,`a`.`is_enable` AS `is_enable` from `t_commodity_road` `a` where ((`a`.`box_id` = ?2) and (`a`.`commodity_id` = ?1) and (`a`.`commodity_num` > 0)) order by `a`.`commodity_num` desc", nativeQuery = true)
	List<CommodityRoad> findByBoxIdAndCommodityId(Long commodityId,Long box_id);

}
